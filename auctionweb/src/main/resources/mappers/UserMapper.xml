<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cto.auction.repository.UserDAO">
	<resultMap type="user" id="userResult" />
	<resultMap type="payment" id="paymentResult" />
	<resultMap type="auctioneer" id="auctioneerResult" />
	<resultMap type="item" id="itemResult" />
	<resultMap type="bid" id="bidResult"/>
	<resultMap type="message" id="messageResult"></resultMap>
	<!-- 테스트/관리자용 회원정보 -->
	<select id="auctionUserList" resultType="user">
		SELECT * FROM
		AUCTION_USER WHERE 1=1
	</select>
	<select id="loginCheck" resultType="user">
		SELECT * FROM AUCTION_USER
		WHERE email = #{email} AND password = #{password}
	</select>
	<!-- 회원가입 : USER_ID자동생성 ,권한 및 포인트 기본 0 -->
	<select id="signUpProc" resultType="user">
		INSERT INTO
		AUCTION_USER
		(EMAIL, PASSWORD, USER_NAME, REGISTER_DATE) VALUES
		(#{email},
		#{password}, #{user_name}, SYSDATE)
	</select>

	<select id="myPageUserInfo" resultType="user">
		SELECT * FROM
		AUCTION_USER WHERE USER_ID = #{user_id }
	</select>
	<update id="myPageUserUpdate" parameterType="user">
		UPDATE
		AUCTION_USER
		SET
		PICTURE_LOCATION = #{picture_location},
		PHONE_NUMBER =
		#{phone_number},
		USER_NAME = #{user_name},
		PASSWORD = #{password}
		WHERE
		USER_ID = ${user_id }
	</update>
	<delete id="myPageUserDelete">
		DELETE FROM AUCTIONEER_INFO WHERE AUCTIONEER_ID = #{user_id}
	</delete>
	<delete id="myPageUserDelete2">
		DELETE FROM AUCTION_USER WHERE USER_ID = #{user_id}
	</delete>
	

	<update id="myPageLocUpdate" parameterType="user">
		UPDATE
		AUCTION_USER
		SET
		REAL_NAME = #{real_name},
		ADDRESS = #{address},
		ZIP_CODE =
		#{zip_code},
		PHONE_NUMBER = #{phone_number}
		WHERE USER_ID = ${user_id }
	</update>

	<select id="myPageUserPayment" resultType="payment">
		SELECT * FROM
		USER_PAYMENT WHERE USER_ID = #{user_id}
	</select>
	<update id="myPagePayUpdate" parameterType="payment">
		UPDATE
		USER_PAYMENT
		SET
		CARD_COMPANY = #{card_company},
		SERIAL_NUMBER = #{serial_number},
		CVC = #{cvc},
		MONTH = #{month},
		YEAR = #{year}
		WHERE USER_ID = ${user_id}
	</update>
	<select id="myPagePayInsert" resultType="payment">
		INSERT INTO
		USER_PAYMENT
		( USER_ID, CARD_COMPANY, SERIAL_NUMBER, CVC, MONTH, YEAR )
		VALUES
		( ${user_id }, #{card_company}, #{serial_number}, #{cvc}, #{month}, #{year})
	</select>

	<select id="auctioneerAuctioneerInfo" resultType="auctioneer">
		SELECT * FROM
		AUCTIONEER_INFO WHERE AUCTIONEER_ID = #{auctioneer_id}
	</select>
	<update id="auctioneerAuctioneerUpdate" parameterType="auctioneer">
		UPDATE
		AUCTIONEER_INFO
		SET
		BANK_NAME = #{bank_name},
		ACCOUNT_NAME =
		#{account_name},
		ACCOUNT_NUMBER = #{account_number}
		WHERE AUCTIONEER_ID
		= ${auctioneer_id }
	</update>
	<!-- auctioneer_id를 jsp에서 불러오기때문에, 경매자 id를 이용하여 AUCTION_USER 테이블 수정. -->
	<update id="auctioneerAuctioneerAuth" parameterType="user">
		UPDATE
		AUCTION_USER
		SET
		AUTH = 2
		WHERE USER_ID = ${auctioneer_id }
	</update>
	<select id="auctioneerAuctioneerInsert" resultType="auctioneer">
		INSERT INTO
		AUCTIONEER_INFO
		( AUCTIONEER_ID, BANK_NAME, ACCOUNT_NAME,
		ACCOUNT_NUMBER ) VALUES
		( ${auctioneer_id }, #{bank_name},
		#{account_name}, #{account_number})
	</select>
	
	
	<!-- 옥션확인내용. -->
	<select id="auctionInfoBidding01" resultMap="itemResult">
		SELECT 
		AI.AUCTION_ID, AI.AUCTIONEER_ID, AI.ITEM_NAME, AI.ITEM_CONTENT, AI.START_DATE,
		AI.END_DATE, AI.STATE_CODE, AI.CURRENT_BIDDER_ID, AI.CURRENT_BIDDER,
		AI.CURRENT_BID_AMOUNT, AI.AUCTION_HIT, AI.CATEGORY_ID, AI.PICTURE_LOCATION
		FROM
		AUCTION_BID AB
		LEFT OUTER JOIN AUCTION_ITEM AI ON AB.AUCTION_ID = AI.AUCTION_ID
		WHERE AB.BIDDER_ID = #{user_id} AND SYSDATE &lt; AI.END_DATE
		AND (AB.BID_AMOUNT, AB.AUCTION_ID) IN
		(SELECT MAX(BID_AMOUNT), AUCTION_ID FROM AUCTION_BID
		GROUP BY AUCTION_ID )
	</select>
	<select id="auctionInfoBidding02" resultMap="bidResult">
		SELECT
		AB.BID_ID, AB.AUCTION_ID, AB.BIDDER_ID, AB.BIDDING_DATE, AB.BID_AMOUNT
		FROM
		AUCTION_BID AB
		LEFT OUTER JOIN AUCTION_ITEM AI ON AB.AUCTION_ID = AI.AUCTION_ID
		WHERE AB.BIDDER_ID = #{bidder_id} AND SYSDATE &lt; AI.END_DATE
		AND (AB.BID_AMOUNT, AB.AUCTION_ID) IN
		(SELECT MAX(BID_AMOUNT), AUCTION_ID FROM AUCTION_BID
		GROUP BY AUCTION_ID )
	</select>
	
	
	<!-- 유저 낙찰한 물품 -->
	<select id="auctionInfoWinBid01" resultMap="itemResult">
		SELECT 
		AI.AUCTION_ID, AI.AUCTIONEER_ID, AI.ITEM_NAME, AI.ITEM_CONTENT, AI.START_DATE,
		AI.END_DATE, AI.STATE_CODE, AI.CURRENT_BIDDER_ID, AI.CURRENT_BIDDER,
		AI.CURRENT_BID_AMOUNT, AI.AUCTION_HIT, AI.CATEGORY_ID, AI.PICTURE_LOCATION
		FROM
		AUCTION_BID AB
		LEFT OUTER JOIN AUCTION_ITEM AI ON AB.AUCTION_ID = AI.AUCTION_ID
		WHERE AB.BIDDER_ID = #{user_id} AND SYSDATE &gt; AI.END_DATE
		AND AB.BIDDER_ID = AI.CURRENT_BIDDER_ID
		AND (AB.BID_AMOUNT, AB.AUCTION_ID) IN
		(SELECT MAX(BID_AMOUNT), AUCTION_ID FROM AUCTION_BID
		GROUP BY AUCTION_ID )
	</select>
	<select id="auctionInfoWinBid02" resultMap="bidResult">
		SELECT
		AB.BID_ID, AB.AUCTION_ID, AB.BIDDER_ID, AB.BIDDING_DATE, AB.BID_AMOUNT
		FROM
		AUCTION_BID AB
		LEFT OUTER JOIN AUCTION_ITEM AI ON AB.AUCTION_ID = AI.AUCTION_ID
		WHERE AB.BIDDER_ID = #{bidder_id} AND SYSDATE &gt; AI.END_DATE
		AND AB.BIDDER_ID = AI.CURRENT_BIDDER_ID
		AND (AB.BID_AMOUNT, AB.AUCTION_ID) IN
		(SELECT MAX(BID_AMOUNT), AUCTION_ID FROM AUCTION_BID
		GROUP BY AUCTION_ID )
	</select>
	
	
	
	<!-- 유저 낙찰실패한 물품 -->
	<select id="auctionInfoLoseBid01" resultMap="itemResult">
		SELECT 
		AI.AUCTION_ID, AI.AUCTIONEER_ID, AI.ITEM_NAME, AI.ITEM_CONTENT, AI.START_DATE,
		AI.END_DATE, AI.STATE_CODE, AI.CURRENT_BIDDER_ID, AI.CURRENT_BIDDER,
		AI.CURRENT_BID_AMOUNT, AI.AUCTION_HIT, AI.CATEGORY_ID, AI.PICTURE_LOCATION
		FROM
		AUCTION_BID AB
		LEFT OUTER JOIN AUCTION_ITEM AI ON AB.AUCTION_ID = AI.AUCTION_ID
		WHERE AB.BIDDER_ID = #{user_id} AND SYSDATE &gt; AI.END_DATE
		AND AB.BIDDER_ID != AI.CURRENT_BIDDER_ID
		AND (AB.BID_AMOUNT, AB.AUCTION_ID) IN
		(SELECT MAX(BID_AMOUNT), AUCTION_ID FROM AUCTION_BID
		GROUP BY AUCTION_ID )
	</select>
	<select id="auctionInfoLoseBid02" resultMap="bidResult">
		SELECT
		AB.BID_ID, AB.AUCTION_ID, AB.BIDDER_ID, AB.BIDDING_DATE, AB.BID_AMOUNT
		FROM
		AUCTION_BID AB
		LEFT OUTER JOIN AUCTION_ITEM AI ON AB.AUCTION_ID = AI.AUCTION_ID
		WHERE AB.BIDDER_ID = #{bidder_id} AND SYSDATE &gt; AI.END_DATE
		AND AB.BIDDER_ID != AI.CURRENT_BIDDER_ID
		AND (AB.BID_AMOUNT, AB.AUCTION_ID) IN
		(SELECT MAX(BID_AMOUNT), AUCTION_ID FROM AUCTION_BID
		GROUP BY AUCTION_ID )
	</select>
	
	
	<!-- 경매인 -->
	<select id="saleInfoBidding01" resultMap="itemResult">
		SELECT * FROM AUCTION_ITEM
		WHERE AUCTIONEER_ID = #{auctioneer_id} AND SYSDATE &lt; END_DATE
	</select>
	
	<select id="saleInfoWinBid01" resultMap="itemResult">
		SELECT * FROM AUCTION_ITEM
		WHERE AUCTIONEER_ID = #{auctioneer_id} AND SYSDATE &gt; END_DATE AND CURRENT_BIDDER_ID IS NOT NULL
	</select>
	
	<select id="saleInfoLoseBid01" resultMap="itemResult">
		SELECT * FROM AUCTION_ITEM
		WHERE AUCTIONEER_ID = #{auctioneer_id} AND SYSDATE &gt; END_DATE AND CURRENT_BIDDER_ID IS NULL
	</select>
	
	
	<select id="winpay1" resultType="item">
	select * from auction_item    
	 where current_bidder_id = #{current_bidder_id } 
	 and auction_id = #{auction_id }
	</select>
	<select id="mem" resultType="user">
		SELECT * FROM auction_user
		WHERE USER_ID = #{user_id}
	</select>
		<!-- 낙찰 후, 포인트 차감. -->
	<update id="memProc"  >
		UPDATE
		AUCTION_USER
		SET
		user_point = #{user_point}
		WHERE USER_ID = #{user_id }
	</update>
	
		<select id="chkDupEmail" resultType="int">
		SELECT COUNT(*)
		FROM AUCTION_USER
		WHERE 1 = 1
		AND email = #{email}
	</select>
	
	<select id="myPageMessageInsert" resultType="message">
		INSERT INTO
		USER_MESSAGE
		( SENDER_ID, USER_ID, MESSAGE_TITLE, MESSAGE_CONTENT )
		VALUES
		(#{sender_id }, #{user_id}, #{message_title}, #{message_content})
	</select>
	
	<select id="messageReceive" resultMap="messageResult">
		SELECT * FROM
		USER_MESSAGE
		WHERE USER_ID = #{user_id}
	</select>
	<select id="messageSend" resultMap="messageResult">
		SELECT * FROM
		USER_MESSAGE
		WHERE SENDER_ID = #{sender_id}
	</select>
	
</mapper>