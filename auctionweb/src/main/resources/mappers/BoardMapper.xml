<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cto.auction.repository.board.BoardDAO">
	<resultMap type="board" id="boardResult"/>
	<resultMap type="item" id="itemResult"/>
	<resultMap type="bid" id="bidResult"/>
	<!-- 1. 전체 게시글 리스트 조회 -->
	<select id="boardList" resultType="board">
		<include refid="pagingHeader"/>
		SELECT ROWNUM AS BOARD_NO, A.* FROM AUCTION_BOARD A
		<include refid="search"/>
		ORDER BY BOARD_GROUP DESC, BOARD_STEP ASC, BOARD_DATE DESC
		<include refid="pagingFooter"/>
	</select>
	
	<!-- 2. 전체 게시글 수 조회 -->
	<select id="countBoard" resultType="int">
		SELECT COUNT(*) FROM AUCTION_BOARD 
		<include refid="search"/>
	</select>
	
	<!-- 3. 게시글 상세조회 -->
	<select id="read" resultType="board">
		SELECT * FROM AUCTION_BOARD WHERE BOARD_ID = #{board_id}
	</select>
	<!-- 4. 조회수 증가 -->
	<update id="increaseHit">
		UPDATE AUCTION_BOARD SET BOARD_HIT = BOARD_HIT+1 WHERE BOARD_ID = #{board_id}
	</update>
	
	<!-- 5. 게시글 수정 -->
	<update id="update">
		UPDATE AUCTION_BOARD SET BOARD_TITLE = #{board_title}, BOARD_CONTENT = #{board_content} WHERE BOARD_ID = #{board_id}
	</update>
	
	<!-- 6. 게시글 작성 -->	
	<insert id="insert">
		INSERT INTO AUCTION_BOARD(AUCTION_ID, BOARD_WRITER_ID, BOARD_NAME, BOARD_TITLE, BOARD_CONTENT) 
		VALUES(#{auction_id}, #{board_writer_id}, #{board_name}, #{board_title}, #{board_content})
	</insert>
	
	<!-- 7. 게시글 삭제 -->
	<delete id="delete">
		DELETE FROM AUCTION_BOARD WHERE BOARD_ID = #{board_id}
	</delete>
	
	<!-- 8. 답변 달기 -->
	<insert id="insertReply">
		INSERT INTO AUCTION_BOARD (BOARD_WRITER_ID, AUCTION_ID, BOARD_NAME, BOARD_TITLE, BOARD_CONTENT, BOARD_STEP, BOARD_INDENT, BOARD_GROUP)
		VALUES(#{board_writer_id}, #{auction_id}, #{board_name}, #{board_title}, #{board_content}, #{board_step}+1, #{board_indent}+1, #{board_group})
	</insert>
	
	<!-- 9. 답변 모양 -->
	<update id="shapeReply">
		UPDATE AUCTION_BOARD SET BOARD_STEP = BOARD_STEP+1 WHERE AUCTION_ID = #{auction_id} AND BOARD_GROUP = #{board_group} AND 
		BOARD_STEP > #{board_step} 
	</update>
	
	<!-- 아이템 상세정보 -->
	<select id="itemInfo" resultType="item">
		SELECT * FROM AUCTION_ITEM WHERE AUCTION_ID = #{auction_id}
	</select>
	
	<!-- 입찰시 아이템테이블에 입찰값 및 입찰자 업데이트 -->
	<update id="itemUpdate">
		UPDATE AUCTION_ITEM SET CURRENT_BIDDER_ID = #{current_bidder_id}, CURRENT_BID_AMOUNT = #{current_bid_amount}, CURRENT_BIDDER = #{current_bidder} WHERE AUCTION_ID = #{auction_id}
	</update>
	
	<!-- 입찰테이블에 입찰자에 대한 정보가 있는지 없는지 확인 -->
	<select id="bidCheck" resultType="bid">
		SELECT * FROM AUCTION_BID WHERE AUCTION_ID = #{auction_id} AND BIDDER_ID = #{bidder_id}
	</select>
	<!-- 입찰시 처음 입찰자는 정보 insert -->
	<insert id="bidInsert">
		INSERT INTO AUCTION_BID VALUES(AUCTION_BID_SEQ.NEXTVAL,#{auction_id}, #{bidder_id}, SYSDATE, #{bid_amount})
	</insert>
	<!-- 입찰시 처음 입찰자가 아닌 경우에는 정보 update -->
	<update id="bidUpdate">
		UPDATE AUCTION_BID SET BID_AMOUNT = #{bid_amount}, BIDDING_DATE = SYSDATE WHERE AUCTION_ID = #{auction_id} AND BIDDER_ID = #{bidder_id}
	</update>
	
	<!-- 입찰 로그 목록 보기 -->
	<select id="bidList" resultMap="bidResult">
		SELECT * FROM AUCTION_BID WHERE AUCTION_ID = #{auction_id} ORDER BY BIDDING_DATE DESC
	</select>
	
	<!-- 아이템 조회수 증가 -->
	<update id="itemHit">
		UPDATE AUCTION_ITEM SET AUCTION_HIT = AUCTION_HIT+1 WHERE AUCTION_ID = #{auction_id}
	</update>
	
	<!-- 경매종료시 status변경 -->
	<update id="changeStaus">
		UPDATE AUCTION_ITEM SET STATE_CODE = 2 WHERE AUCTION_ID = #{auction_id}
	</update>



	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
	<sql id="search">
		WHERE 1=1 
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="option == 'all'">
				AND (BOARD_NAME LIKE '%'||#{keyword}||'%'
				OR BOARD_CONTENT LIKE '%'||#{keyword}||'%'
				OR BOARD_TITLE LIKE '%'||#{keyword}||'%') AND AUCTION_ID = #{auction_id}
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				AND ${option} LIKE '%'||#{keyword}||'%' AND AUCTION_ID = #{auction_id}
			</otherwise>
		</choose>
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
	    SELECT * FROM (
	        
	</sql>
	<sql id="pagingFooter">
	       
	    ) WHERE BOARD_NO BETWEEN #{start} AND #{end}
	</sql>
			
</mapper>