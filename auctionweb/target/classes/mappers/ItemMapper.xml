<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cto.auction.repository.item.ItemDAO">
	<resultMap type="item" id="itemResult"/>
	<!--  아이템 리스트 조회   // 정효형 리스트업 방식.
		<select id="itemList" resultType="item">
		SELECT * FROM AUCTION_ITEM
	</select> -->
	<!-- 아이템 등록 -->
	<insert id="itemInsert">
		INSERT INTO AUCTION_ITEM(AUCTIONEER_ID, 
			ITEM_NAME,
			ITEM_CONTENT,
			END_DATE,
			CURRENT_BID_AMOUNT,
			CATEGORY_ID,
			PARENT_CATEGORY_ID,
			PICTURE_LOCATION)
			 VALUES(#{auctioneer_id},
			 		#{item_name},
			 		#{item_content},
			 		SYSDATE+7,
			 		#{current_bid_amount},
			 		#{category_id}, 
			 		#{parent_category_id},
			 		#{picture_location})
<!-- insert into auction_item (
  auctioneer_id
  , item_name
  , item_content
  , end_date
  , current_bid_amount
  , category_id
  , parent_category_id
  , picture_location)
  values (
    1
    , 'iPhone 7'
    , '애플의 감성의 끝판왕 아이폰 7이 돌아왔다.'
    , SYSDATE + 7
    , 10000
    , 4
    , 2
    , 'image/somthing/in/here');	 -->		 
	</insert>
	
	
	<!--  검색 & 필터적용 
	ROWNUM은 페이징처리, main.jsp를위해 사용.
	LEFT OUTER와 INNER JOIN은 결국 부모,자식카테고리 category_name 결과를 얻기위함.
	부모검색용:  c2.category_name
	자식검색용:  c1.category_name
	lower()처리는 대소문자 관계없이 검색하기위함.
	
	if test = "test="userStartDate != null and userStartDate != ''"
	  != and != 설정이유: 검색default로 유효한(입찰마감을 제외한)물품들만 검색가능. 
	  -> 필터로 마감물품/모두보기가능.
	userStartDate : 물품 입찰시작날짜 설정 - &gt;= 는 <= 로 변환. to_date는 문자를 날짜형식으로변환.
	userEndDate : 물품 입찰마감날짜 설정 - &lt;= 는 >= 로 변환. to_date는 문자를 날짜형식으로변환.
	aucStatus : 입찰상태 필터 - 유저날짜설정과 비슷한패턴.
	
	minCurrentBidPrice 유저 최소입찰가격 필터
	maxCurrentBidPrice 유저 최대입찰가격 필터
	
	endDateOrder : 입찰마감날짜 정렬
	priceOrder : 입찰가 정렬.
	  설정: order by라서 순서 영향받음 -> 둘다 정렬할경우 낮은가격을 우선시 정렬후에 같은가격때에 마감날짜로 정렬.
	order by auction_id desc는 default(필터전) 신상등록이 첫페이지 가야한다고 생각해서.
	cnt between은 페이징처리용.
	-->
	<select id="searchLists" resultMap="itemResult" parameterType="itemSch">
		SELECT * FROM (
		SELECT ROWNUM AS cnt, aiall.* FROM (
		SELECT ai.*, c2.category_name parentName, c1.category_name childName FROM auction_item ai
		LEFT OUTER JOIN category c1 ON ai.category_id = c1.category_id
		INNER JOIN category c2 ON c1.parent_category_id = c2.category_id
		WHERE 1=1
		<if test="schParentDept != null and schParentDept != '' ">
			AND c2.category_name LIKE '%'|| #{schParentDept} ||'%'
		</if>
		<if test="schDept != null and schDept != '' ">
			AND c1.category_name LIKE '%'|| #{schDept} ||'%'
		</if>
		<if test="userStartDate != null and userStartDate != '' ">
			AND ai.start_date &gt;= to_date( #{userStartDate} , 'yyyy/mm/dd' )
		</if>
		<if test="userEndDate != null and userEndDate != '' ">
			AND ai.end_date &lt;= to_date( #{userEndDate} , 'yyyy/mm/dd' )
		</if>
		<if test="userStartDate != null and userStartDate != '' and userEndDate != null and userEndDate != '' ">
			AND ai.start_date BETWEEN to_date( #{userStartDate} , 'yyyy/mm/dd' ) and to_date( #{userEndDate} , 'yyyy/mm/dd' )
		</if>
		<if test="schAll != null and schAll != '' ">
			AND ( lower(c2.category_name) LIKE lower('%'|| #{schAll} ||'%')
			or lower(c1.category_name) LIKE lower('%'|| #{schAll} ||'%')
			or lower(ai.item_name) LIKE lower('%'|| #{schAll} ||'%')
			or lower(ai.item_content) LIKE lower('%'|| #{schAll} ||'%') )
		</if>
		<if test = "aucStatus != 'allAuction' and aucStatus != 'outOfAuction'   " >
			AND sysdate &lt;= end_date
		</if>
		<if test = "aucStatus == 'outOfAuction' " >
			AND sysdate &gt;= end_date
		</if>
		<if test = "minCurrentBidPrice != null and minCurrentBidPrice != '' " >
			AND ai.current_bid_amount &gt;= to_number( #{minCurrentBidPrice } )
		</if>
		<if test = "maxCurrentBidPrice != null and maxCurrentBidPrice != '' " >
			AND ai.current_bid_amount &lt;= to_number( #{maxCurrentBidPrice } )
		</if>
		<if test="endDateOrder != null and priceOrder != null and endDateOrder != '' and priceOrder != '' " >
			ORDER BY ai.current_bid_amount ${priceOrder}, ai.end_date ${endDateOrder}
		</if>  
		<if test="endDateOrder != '' and priceOrder == '' " >
			ORDER BY ai.end_date ${endDateOrder}
		</if>  
		<if test="priceOrder != ''  and endDateOrder == '' " >
			ORDER BY ai.current_bid_amount ${priceOrder}
		</if>  
		<if test="priceOrder == '' and endDateOrder == '' " >
			ORDER BY ai.auction_id desc
		</if>  
		) aiall )
		WHERE cnt BETWEEN #{start} AND #{end}
		
	</select>

	<!-- 최고입찰가 : subquery로 max(입찰가)값을 추출. -->
	<select id="highestBid" resultMap="itemResult">
		SELECT * FROM auction_item
		WHERE current_bid_amount =(
			SELECT MAX(current_bid_amount) 
			FROM auction_item)
		AND ROWNUM = 1
	</select>
	<!-- 최다 조회물품 : subquery로 max(조회)값을 추출.-->
	<select id="highestHit" resultMap="itemResult">
		SELECT * FROM auction_item
		WHERE auction_hit = (
			SELECT MAX(auction_hit) 
			FROM auction_item)
		AND ROWNUM = 1
	</select>
	<!-- 랜덤 물품 조회 : 랜덤함수 -->
	<select id="randomOne" resultType="item">
		SELECT * FROM 
			( SELECT * FROM
			auction_item
			ORDER BY DBMS_RANDOM.RANDOM)
		WHERE ROWNUM =1
	</select>

	<!-- 검색결과 전체 물품수 카운트. 내용물은 searchLists와 동일.-->
	<select id="totCnt" parameterType="itemSch" resultType="int">
		SELECT count(*) FROM (
		SELECT ROWNUM AS cnt, aiall.* FROM (
		SELECT ai.*, c2.category_name parentName, c1.category_name childName FROM auction_item ai
		LEFT OUTER JOIN category c1 ON ai.category_id = c1.category_id
		INNER JOIN category c2 ON c1.parent_category_id = c2.category_id
		WHERE 1=1
		<if test="schParentDept != null and schParentDept != '' ">
			AND c2.category_name LIKE '%'|| #{schParentDept} ||'%'
		</if>
		<if test="schDept != null and schDept != '' ">
			AND c1.category_name LIKE '%'|| #{schDept} ||'%'
		</if>
		<if test="userStartDate != null and userStartDate != '' ">
			AND ai.start_date &gt;= to_date( #{userStartDate} , 'yyyy/mm/dd' )
		</if>
		<if test="userEndDate != null and userEndDate != '' ">
			AND ai.end_date &lt;= to_date( #{userEndDate} , 'yyyy/mm/dd' )
		</if>
		<if test="userStartDate != null and userStartDate != '' and userEndDate != null and userEndDate != '' ">
			AND ai.start_date BETWEEN to_date( #{userStartDate} , 'yyyy/mm/dd' ) and to_date( #{userEndDate} , 'yyyy/mm/dd' )
		</if>
		<if test="schAll != null and schAll != '' ">
			AND ( lower(c2.category_name) LIKE lower('%'|| #{schAll} ||'%')
			or lower(c1.category_name) LIKE lower('%'|| #{schAll} ||'%')
			or lower(ai.item_name) LIKE lower('%'|| #{schAll} ||'%')
			or lower(ai.item_content) LIKE lower('%'|| #{schAll} ||'%') )
		</if>
		<if test = "aucStatus != 'allAuction' and aucStatus != 'outOfAuction'   " >
			AND sysdate &lt;= end_date
		</if>
		<if test = "aucStatus == 'outOfAuction' " >
			AND sysdate &gt;= end_date
		</if>
		<if test = "minCurrentBidPrice != null and minCurrentBidPrice != '' " >
			AND ai.current_bid_amount &gt;= to_number( #{minCurrentBidPrice } )
		</if>
		<if test = "maxCurrentBidPrice != null and maxCurrentBidPrice != '' " >
			AND ai.current_bid_amount &lt;= to_number( #{maxCurrentBidPrice } )
		</if>
		<if test="endDateOrder != null and priceOrder != null " >
			ORDER BY ai.current_bid_amount ${priceOrder}, ai.end_date ${endDateOrder}
		</if>  
		<if test="endDateOrder != null and priceOrder == null " >
			ORDER BY ai.end_date ${endDateOrder}
		</if>  
		<if test="priceOrder != null and endDateOrder == null " >
			ORDER BY ai.current_bid_amount ${priceOrder}
		</if>  
		<if test="priceOrder == null and endDateOrder == null " >
			ORDER BY ai.auction_id desc
		</if>  
		) aiall )
	</select>
	
	
	
	
	<!-- whyNot Start -->
	<select id="auctionInfoBidding" resultMap="itemResult">
		SELECT * FROM AUCTION_ITEM WHERE
		AUCTIONEER_ID = ${auctioneer_id }
		<!-- TODO 현재 비딩한 데이터를 다 불러옴
		이중에서 같은 물품은 내가 입찰한 내용만 가지고와야함
		가지고 와야할 값
		아이템테이블 : 현재 입찰가,...등등
		비드 테이블 : 내가 입찰한 금액,... 등등 -->
		<!-- SELECT * FROM AUCTION_ITEM WHERE
		AUCTIONEER_ID = ${user_id }
		AND
		END_DATE > SYSDATE -->
	</select>
	<!-- Bidding(비딩중인 물품) -->
	<select id="auctionInfoWinBid" resultMap="itemResult">
	SELECT * FROM AUCTION_ITEM WHERE
		AUCTIONEER_ID = ${auctioneer_id }
	</select>
	<!-- LoseBid(작찰실패한 물품) -->
	<select id="auctionInfoLoseBid" resultMap="itemResult">
	SELECT * FROM AUCTION_ITEM WHERE
		AUCTIONEER_ID = ${auctioneer_id }
	</select>
	
	
	
	
	
</mapper>
